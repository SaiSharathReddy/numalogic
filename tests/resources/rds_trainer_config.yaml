stream_confs:
  s2s_5x:
    config_id: "s2s_5x"
    source: "rds"
    composite_keys: ["client_alias", "service_alias"]
    window_size: 10
    ml_pipelines:
      s2s5x:
        pipeline_id: "s2s5x"
        metrics: [ "5xx"]
        numalogic_conf:
          model:
            name: "VanillaAE"
            conf:
              seq_len: 10
              n_features: 1
              loss_fn: "mse"
          preprocess:
            - name: "LogTransformer"
              stateful: false
              conf:
                add_factor: 5
          threshold:
            name: "MaxPercentileThreshold"
            conf:
              min_threshold: 0.1
          trainer:
            min_train_size: 180
            retrain_freq_hr: 24
            train_hours: 240
            batch_size: 128
            retry_sec: 900

  gwswimlane:
    config_id: "gwswimlane"
    source: "druid"
    composite_keys: [ "authtype", "slane" ]
    window_size: 10
    ml_pipelines:
      swimlane:
        pipeline_id: "swimlane"
        metrics: ["2xx", "4xx", "5xx"]
        numalogic_conf:
          model:
            name: "VanillaAE"
            conf:
              seq_len: 10
              n_features: 3
              loss_fn: "mse"
          preprocess:
            - name: "LogTransformer"
              stateful: false
              conf:
                add_factor: 5
          threshold:
            name: "MaxPercentileThreshold"
            conf:
              min_threshold: 0.1
          trainer:
            min_train_size: 180
            retrain_freq_hr: 24
            train_hours: 240
            batch_size: 128
            retry_sec: 900

  service5x:
    config_id: "service5x"
    source: "druid"
    composite_keys: [ "service_alias" ]
    window_size: 10
    ml_pipelines:
      service5x:
        pipeline_id: "service5x"
        metrics: ["5xx"]
        numalogic_conf:
          model:
            name: "VanillaAE"
            conf:
              seq_len: 10
              n_features: 1
              loss_fn: "mse"
          preprocess:
            - name: "LogTransformer"
              stateful: false
              conf:
                add_factor: 5
          threshold:
            name: "MaxPercentileThreshold"
            conf:
              min_threshold: 0.1
          trainer:
            min_train_size: 180
            retrain_freq_hr: 24
            train_hours: 240
            batch_size: 256
            retry_sec: 900

  service_tax:
    config_id: "service_tax"
    source: "druid"
    composite_keys: [ "service_alias" ]
    window_size: 10
    ml_pipelines:
      serviceTax:
        pipeline_id: "serviceTax"
        metrics: ["5xx"]
        numalogic_conf:
          model:
            name: "VanillaAE"
            conf:
              seq_len: 10
              n_features: 1
              loss_fn: "mse"
          preprocess:
            - name: "LogTransformer"
              stateful: false
              conf:
                add_factor: 5
          threshold:
            name: "MaxPercentileThreshold"
            conf:
              min_threshold: 0.1
          trainer:
            min_train_size: 180
            retrain_freq_hr: 24
            train_hours: 240
            batch_size: 256
            retry_sec: 900

redis_conf:
  url: "isbsvc-telegraf-redis-isbs-redis-svc.oss-analytics-osamonnumalogic-usw2-prd.svc"
  port: 26379
  expiry: 360
  master_name: "mymaster"

registry_conf:
  name: "RedisRegistry"
  model_expiry_sec: 864000
  jitter_conf:
    jitter_sec: 900
    jitter_steps_sec: 120

rds_conf:
  connection_conf:
    aws_assume_role_arn: "arn:aws:iam::123456789:role/ml_iam_role"
    aws_assume_role_session_name: "ml_pipeline_reader"
    endpoint: "ml-rds-aurora-mysql-cluster.us-west-2.rds.amazonaws.com"
    port: 3306
    database_name: "mldb"
    database_username: "ml_user"
    database_password: ""
    database_connection_timeout: 10
    database_type: "mysql"
    database_provider: "rds"
    aws_region: "us-west-2"
    aws_rds_use_iam: True
    ssl_enabled: true
    ssl:
      ca: "/usr/bin/ml_data/us-west-2-bundle.pem"
  id_fetcher:
    s2s_5x-s2s5x:
      dimensions: ["client_alias", "service_alias", "http_status"]
      aggregations:
        sum_req_count:
          type: doubleSum
          fieldName: sum_req_count
      pivot:
        columns: ["http_status"]
        value: ["sum_req_count"]
      datasource: "ip-apigw-telegraf-druid"
      group_by: ["timestamp", "client_alias", "service_alias", "http_status"]
      hash_query_type: True

    gwswimlane-swimlane:
      dimensions: [ "authtype", "slane" ,"http_status"]
      aggregations:
        sum_req_count:
          type: doubleSum
          fieldName: sum_req_count
      pivot:
        columns: ["http_status"]
        value: ["sum_req_count"]
      datasource: "ip-apigw-telegraf-druid"
      group_by: ["timestamp", "authtype", "slane", "http_status"]
      hash_query_type: False

    service5x-service5x:
      dimensions: ["service_alias", "http_status"]
      aggregations:
        sum_req_count:
          type: doubleSum
          fieldName: sum_req_count
      pivot:
        columns: ["http_status"]
        value: ["sum_req_count"]
      datasource: "ip-apigw-telegraf-druid"
      group_by: ["timestamp", "service_alias", "http_status"]

    service_tax-serviceTax:
      dimensions: ["service_alias", "http_status"]
      aggregations:
        sum_req_count:
          type: doubleSum
          fieldName: sum_req_count
      pivot:
        columns: ["http_status"]
        value: ["sum_req_count"]
      datasource: "ip-apigw-telegraf-druid"
      group_by: ["timestamp", "service_alias", "http_status"]